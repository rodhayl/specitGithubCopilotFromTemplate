{
  "name": "vscode-docu-extension",
  "displayName": "Docu - AI Documentation Assistant",
  "description": "A VS Code extension that provides AI-powered documentation assistance through GitHub Copilot Chat with specialized agents for requirements gathering, design, and implementation planning.",
  "version": "0.1.0",
  "publisher": "docu",
  "repository": "https://github.com/docu/vscode-docu-extension",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.97.0"
  },
  "extensionDependencies": [
    "github.copilot-chat"
  ],
  "categories": [
    "Other",
    "Documentation",
    "AI"
  ],
  "keywords": [
    "vscode",
    "extension",
    "documentation",
    "ai",
    "copilot",
    "chat",
    "requirements",
    "design"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:*",
    "onCommand:workbench.action.chat.open",
    "onView:workbench.panel.chat"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "chatParticipants": [
      {
        "id": "docu",
        "name": "docu",
        "fullName": "Docu Assistant",
        "description": "AI-powered documentation assistant for requirements gathering, design, and implementation planning",
        "isSticky": true,
        "commands": [
          {
            "name": "help",
            "description": "Show help and available commands"
          },
          {
            "name": "new",
            "description": "Create a new document"
          },
          {
            "name": "agent",
            "description": "Manage AI agents"
          },
          {
            "name": "templates",
            "description": "Manage document templates"
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "docu.openSettings",
        "title": "Open Settings",
        "category": "Docu",
        "icon": "$(gear)"
      },
      {
        "command": "docu.showDiagnostics",
        "title": "Show Diagnostics",
        "category": "Docu"
      },
      {
        "command": "docu.exportDiagnostics",
        "title": "Export Diagnostics",
        "category": "Docu"
      },
      {
        "command": "docu.showOutput",
        "title": "Show Output Channel",
        "category": "Docu"
      },
      {
        "command": "docu.test",
        "title": "Test Extension",
        "category": "Docu"
      },
      {
        "command": "docu.clearLogs",
        "title": "Clear Logs",
        "category": "Docu"
      },
      {
        "command": "docu.toggleDebug",
        "title": "Toggle Debug Mode",
        "category": "Docu"
      },
      {
        "command": "docu.checkOfflineStatus",
        "title": "Check Offline Mode Status",
        "category": "Docu"
      },
      {
        "command": "docu.forceOfflineCheck",
        "title": "Force Model Availability Check",
        "category": "Docu"
      },
      {
        "command": "docu.toggleOfflineMode",
        "title": "Toggle Offline Mode",
        "category": "Docu"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "docu.settingsView",
          "name": "Docu Settings",
          "type": "webview",
          "contextualTitle": "Docu Configuration"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "docu.openSettings",
          "when": "view == docu.settingsView",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "docu.openSettings",
          "title": "Docu: Open Settings"
        }
      ]
    },
    "configuration": {
      "title": "Docu - AI Documentation Assistant",
      "properties": {
        "docu.defaultDirectory": {
          "type": "string",
          "default": "docs",
          "description": "Default directory for creating new documents",
          "scope": "workspace"
        },
        "docu.defaultAgent": {
          "type": "string",
          "default": "prd-creator",
          "enum": [
            "prd-creator",
            "brainstormer",
            "requirements-gatherer",
            "solution-architect",
            "specification-writer",
            "quality-reviewer"
          ],
          "description": "Default agent to use when the extension starts",
          "scope": "workspace"
        },
        "docu.preferredModel": {
          "type": "string",
          "default": "",
          "description": "Preferred language model to use for AI requests (leave empty for automatic selection)",
          "scope": "workspace"
        },
        "docu.templateDirectory": {
          "type": "string",
          "default": ".vscode/docu/templates",
          "description": "Directory containing user-defined templates (relative to workspace root)",
          "scope": "workspace"
        },
        "docu.agentConfigDirectory": {
          "type": "string",
          "default": ".vscode/docu",
          "description": "Directory containing agent configuration files",
          "scope": "workspace"
        },
        "docu.autoSaveDocuments": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save documents when they are created or updated",
          "scope": "workspace"
        },
        "docu.showWorkflowProgress": {
          "type": "boolean",
          "default": true,
          "description": "Show workflow progress and phase transitions in chat responses",
          "scope": "workspace"
        },
        "docu.enableHotReload": {
          "type": "boolean",
          "default": true,
          "description": "Automatically reload agent configurations and templates when files change",
          "scope": "workspace"
        },
        "docu.reviewLevel": {
          "type": "string",
          "default": "normal",
          "enum": [
            "light",
            "normal",
            "strict"
          ],
          "description": "Default review level for document quality checks",
          "scope": "workspace"
        },
        "docu.maxFilesInSummary": {
          "type": "number",
          "default": 50,
          "minimum": 1,
          "maximum": 200,
          "description": "Maximum number of files to process in summary and catalog operations",
          "scope": "workspace"
        },
        "docu.enableDebugLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for troubleshooting",
          "scope": "workspace"
        },
        "docu.debug.offlineMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for offline mode detection",
          "scope": "workspace"
        },
        "docu.offline.forceMode": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "online",
            "offline"
          ],
          "description": "Force online/offline mode for testing (auto = automatic detection)",
          "scope": "workspace"
        },
        "docu.offline.checkInterval": {
          "type": "number",
          "default": 60,
          "minimum": 10,
          "maximum": 300,
          "description": "Interval in seconds between model availability checks",
          "scope": "workspace"
        },
        "docu.offline.maxRetries": {
          "type": "number",
          "default": 3,
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of retry attempts for model availability checks",
          "scope": "workspace"
        },
        "docu.offline.skipStartupCheck": {
          "type": "boolean",
          "default": false,
          "description": "Skip model availability check during extension startup (models will be checked on first use)",
          "scope": "workspace"
        },
        "docu.autoChat.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable auto-chat mode for seamless conversation flow after agent commands",
          "scope": "workspace"
        },
        "docu.autoChat.timeoutMinutes": {
          "type": "number",
          "default": 30,
          "minimum": 5,
          "maximum": 120,
          "description": "Auto-chat session timeout in minutes",
          "scope": "workspace"
        },
        "docu.autoChat.enableDocumentUpdates": {
          "type": "boolean",
          "default": true,
          "description": "Automatically update document files during conversations",
          "scope": "workspace"
        },
        "docu.autoChat.showProgressIndicators": {
          "type": "boolean",
          "default": true,
          "description": "Show document update progress during conversations",
          "scope": "workspace"
        },
        "docu.autoChat.enableAfterAgentSet": {
          "type": "boolean",
          "default": true,
          "description": "Automatically enable chat mode after setting an agent",
          "scope": "workspace"
        },
        "docu.autoChat.enableAfterDocumentCreation": {
          "type": "boolean",
          "default": true,
          "description": "Automatically enable chat mode after creating documents with --with-conversation flag",
          "scope": "workspace"
        },
        "docu.logging.level": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warn",
            "error",
            "none"
          ],
          "description": "Logging level for the extension",
          "scope": "workspace"
        },
        "docu.logging.enableConsole": {
          "type": "boolean",
          "default": true,
          "description": "Enable console logging",
          "scope": "workspace"
        },
        "docu.logging.enableOutputChannel": {
          "type": "boolean",
          "default": true,
          "description": "Enable output channel logging",
          "scope": "workspace"
        },
        "docu.logging.enableFile": {
          "type": "boolean",
          "default": false,
          "description": "Enable file logging",
          "scope": "workspace"
        },
        "docu.logging.maxLogEntries": {
          "type": "number",
          "default": 1000,
          "minimum": 100,
          "maximum": 10000,
          "description": "Maximum number of log entries to keep in memory",
          "scope": "workspace"
        },
        "docu.logging.categories": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "enum": [
              "extension",
              "agent",
              "tool",
              "template",
              "command",
              "error",
              "security"
            ]
          },
          "description": "Log categories to include (empty array means all categories)",
          "scope": "workspace"
        },
        "docu.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable telemetry collection (respects VS Code telemetry settings)",
          "scope": "workspace"
        },
        "docu.telemetry.collectUsageData": {
          "type": "boolean",
          "default": true,
          "description": "Collect usage data for improving the extension",
          "scope": "workspace"
        },
        "docu.telemetry.collectPerformanceData": {
          "type": "boolean",
          "default": true,
          "description": "Collect performance data for optimization",
          "scope": "workspace"
        },
        "docu.telemetry.collectErrorData": {
          "type": "boolean",
          "default": true,
          "description": "Collect error data for debugging",
          "scope": "workspace"
        },
        "docu.telemetry.anonymizeData": {
          "type": "boolean",
          "default": true,
          "description": "Anonymize collected telemetry data",
          "scope": "workspace"
        },
        "docu.telemetry.maxEvents": {
          "type": "number",
          "default": 1000,
          "minimum": 100,
          "maximum": 5000,
          "description": "Maximum number of telemetry events to keep in memory",
          "scope": "workspace"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:vscode": "vscode-test",
    "test:conversation-flow": "jest --testPathPatterns=\"(CommandConversationFlow|ConversationErrorHandling|OnlineOfflineConversation)\" --verbose",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.2",
    "eslint": "^9.19.0",
    "jest": "^30.1.1",
    "ts-jest": "^29.4.1",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "js-yaml": "^4.1.0"
  }
}
